AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a VPC and 4 subnets
#----------------------------------------------
Parameters:
  #------------------
  InternalVpcInternalDnsName: 
    Description: Route53 Private Hosted zone
    Type: String
    AllowedPattern: "^([a-z0-9]+(-[a-z0-9]+)*\\.?)+\\.$"
    Default: "internal.local."
    ConstraintDescription: You can use letters (abc), numbers (123) and dashes/hyphens.
  InternalVpcName:
    Description: Name for the VPC
    Type: String
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    Default: InternalVPC
    ConstraintDescription: Can contain only ASCII characters.
  InternalVpcCidr:
    Description: CIDR Block for the  VPC
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.1.0.0/16
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.0.0/16
  #---
  InternalFrontSubnet1Name:
    Description: Name for the Front Subnet 1
    Type: String
    Default: InternalVPCFrontSub1
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
  InternalFrontSubnet1Cidr:
    Description: CIDR Block for the  Front subnet 1
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.1.64.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.1.0/24
  #---
  InternalFrontSubnet2Name:
    Description: Name for the Front Subnet 2
    Type: String
    Default: InternalVPCFrontSub2
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
  InternalFrontSubnet2Cidr:
    Description: CIDR Block for the  Front subnet 2
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.1.128.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.1.0/24
  #---
  InternalBackSubnet1Name:
    Description: Name for the Back Subnet 1
    Type: String
    Default: InternalVPCBackSub1
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
  InternalBackSubnet1Cidr:
    Description: CIDR Block for the  private subnet 1
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.1.160.0/19
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.1.0/24
  #---
  InternalBackSubnet2Name:
    Description: Name for the Back Subnet 2
    Type: String
    Default: InternalVPCBackSub2
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
  InternalBackSubnet2Cidr:
    Description: CIDR Block for the  Back subnet 2
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.1.192.0/19
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.1.0/24
  #------------------
  ExternalVpcInternalDnsName: 
    Description: Route53 Private Hosted zone
    Type: String
    AllowedPattern: "^([a-z0-9]+(-[a-z0-9]+)*\\.?)+\\.$"
    Default: "external.local."
    ConstraintDescription: You can use letters (abc), numbers (123) and dashes/hyphens.
  ExternalVpcName:
    Description: Name for the VPC
    Type: String
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    Default: ExternalVPC
    ConstraintDescription: Can contain only ASCII characters.
  ExternalVpcCidr:
    Description: CIDR Block for the  VPC
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.2.0.0/16
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.0.0/16
  #---
  ExternalFrontSubnet1Name:
    Description: Name for the Front Subnet 1
    Type: String
    Default: ExternalVPCFrontSub1
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
  ExternalFrontSubnet1Cidr:
    Description: CIDR Block for the  Front subnet 1
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.2.64.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.1.0/24
  #---
  ExternalFrontSubnet2Name:
    Description: Name for the Front Subnet 2
    Type: String
    Default: ExternalVPCFrontSub2
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
  ExternalFrontSubnet2Cidr:
    Description: CIDR Block for the  Front subnet 2
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.2.128.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.1.0/24
  #------------------
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      -
        Label:
          default: "Internal VPC Configurations"
        Parameters:
          - InternalVpcInternalDnsName
          - InternalVpcName
          - InternalVpcCidr
      -
        Label:
          default: "Internal VPC - Subnets Configurations"
        Parameters:
          - InternalFrontSubnet1Name
          - InternalFrontSubnet1Cidr
          - InternalFrontSubnet2Name
          - InternalFrontSubnet2Cidr
          - InternalBackSubnet1Name
          - InternalBackSubnet1Cidr
          - InternalBackSubnet2Name
          - InternalBackSubnet2Cidr
      -
        Label:
          default: "External VPC Configurations"
        Parameters:
          - ExternalVpcInternalDnsName
          - ExternalVpcName
          - ExternalVpcCidr
      -
        Label:
          default: "External VPC - Subnets Configurations"
        Parameters:
          - ExternalFrontSubnet1Name
          - ExternalFrontSubnet1Cidr
          - ExternalFrontSubnet2Name
          - ExternalFrontSubnet2Cidr
#----------------------------------------------
Resources:
  #------------------ VPC FlowLog Role
  FlowlogRole:
    Type: "AWS::IAM::Role"
    Properties: 
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - vpc-flow-logs.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: "Flowlog"
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action: 
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:PutLogEvents"
                Resource: "*"
  #------------------------Internal VPC ------------------------
  #------------------ VPC
  InternalVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref InternalVpcCidr
      EnableDnsSupport: True
      EnableDnsHostnames: True
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub ${InternalVpcName}
  #------------------ Subnet
  InternalFrontSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref InternalFrontSubnet1Cidr
      VpcId: !Ref InternalVpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Ref InternalFrontSubnet1Name
  InternalFrontSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref InternalFrontSubnet2Cidr
      VpcId: !Ref InternalVpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Ref InternalFrontSubnet2Name
  InternalBackSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref InternalBackSubnet1Cidr
      VpcId: !Ref InternalVpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref InternalBackSubnet1Name
  InternalBackSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref InternalBackSubnet2Cidr
      VpcId: !Ref InternalVpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref InternalBackSubnet2Name
  #------------------ Route Table
  #----------  VPC Public Route Table
  InternalFrontRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InternalVpc
      Tags:
        - Key: Name
          Value: !Sub ${InternalVpcName}-InternalFrontRouteTable
  #----
  InternalBackSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InternalVpc
      Tags:
        - Key: Name
          Value: !Sub ${InternalVpcName}-InternalBackSubnet1RouteTable
  #----
  InternalBackSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InternalVpc
      Tags:
        - Key: Name
          Value: !Sub ${InternalVpcName}-InternalBackSubnet2RouteTable
  #---- Attache to subnets in the  VPC
  InternalFrontRouteTableAssociationInternalFrontSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InternalFrontSubnet1
      RouteTableId: !Ref InternalFrontRouteTable
  InternalFrontRouteTableAssociationInternalFrontSubnet2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InternalFrontSubnet2
      RouteTableId: !Ref InternalFrontRouteTable
  InternalBackSubnet1RouteTableAssociationInternalBackSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InternalBackSubnet1
      RouteTableId: !Ref InternalBackSubnet1RouteTable 
  InternalBackSubnet2RouteTableAssociationInternalBackSubnet2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InternalBackSubnet2
      RouteTableId: !Ref InternalBackSubnet2RouteTable
  #------------------ Local Domain Name
  InternalVpcInternalDns:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: "Resource DNS for  VPC"
      Name: !Ref InternalVpcInternalDnsName
      VPCs:
        - VPCId: !Ref InternalVpc
          VPCRegion: !Ref AWS::Region
  #------------------ Cloudwatch log for Flowlog
  InternalVPCFlowlog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt FlowlogRole.Arn
      LogGroupName: !Sub VPCFlowLogs/${InternalVpcName}
      ResourceId: !Ref InternalVpc
      ResourceType: VPC
      TrafficType: ALL
  #------------------------External VPC ------------------------
  #------------------ VPC
  ExternalVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref ExternalVpcCidr
      EnableDnsSupport: True
      EnableDnsHostnames: True
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub ${ExternalVpcName}
  #------------------ Internet GW
  ExternalIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ExternalVpcName}-IGW
  ExternalAttachIgw:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref ExternalIgw
      VpcId: !Ref ExternalVpc
    DependsOn:
      - ExternalVpc
      - ExternalIgw
  #------------------ Subnet
  ExternalFrontSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref ExternalFrontSubnet1Cidr
      VpcId: !Ref ExternalVpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Ref ExternalFrontSubnet1Name
  ExternalFrontSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref ExternalFrontSubnet2Cidr
      VpcId: !Ref ExternalVpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Ref ExternalFrontSubnet2Name
  #------------------ Route Table
  #----------  VPC Public Route Table
  ExternalFrontRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ExternalVpc
      Tags:
        - Key: Name
          Value: !Sub ${ExternalVpcName}-ExternalFrontRouteTable
  ExternalVpcInternetRote:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ExternalFrontRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ExternalIgw
    DependsOn:
      - ExternalAttachIgw
  #---- Attache to subnets in the  VPC
  ExternalFrontRouteTableAssociationExternalFrontSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ExternalFrontSubnet1
      RouteTableId: !Ref ExternalFrontRouteTable
  ExternalFrontRouteTableAssociationExternalFrontSubnet2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ExternalFrontSubnet2
      RouteTableId: !Ref ExternalFrontRouteTable
  #------------------ Local Domain Name
  ExternalVpcExternalDns:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: "Resource DNS for  VPC"
      Name: !Ref ExternalVpcInternalDnsName
      VPCs:
        - VPCId: !Ref ExternalVpc
          VPCRegion: !Ref AWS::Region
  #------------------ Cloudwatch log for Flowlog
  ExternalVPCFlowlog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt FlowlogRole.Arn
      LogGroupName: !Sub VPCFlowLogs/${ExternalVpcName}
      ResourceId: !Ref ExternalVpc
      ResourceType: VPC
      TrafficType: ALL
  #------------------------VPC Peering ------------------------
  VPCPeering:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref InternalVpc
      PeerVpcId: !Ref ExternalVpc
  InternalFrontRouteDestExternalVpc:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref InternalFrontRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      VpcPeeringConnectionId: !Ref VPCPeering
    DependsOn:
      - VPCPeering
  ExternalFrontRouteDestExternalVpc:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ExternalFrontRouteTable
      DestinationCidrBlock: !Ref InternalVpcCidr
      VpcPeeringConnectionId: !Ref VPCPeering
    DependsOn:
      - VPCPeering

  #------------------------Security Group ------------------------
  # External
  ExternalRdpSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "RDP for ExternalVPC"
      GroupName: ExternalRdpSG
      VpcId: !Ref ExternalVpc
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
  ExternalSshSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "SSH for ExternalVPC"
      GroupName: ExternalSshSG
      VpcId: !Ref ExternalVpc
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  ExternalBastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "For Bastion in ExternalVPC"
      GroupName: ExternalBastionSG
      VpcId: !Ref ExternalVpc
  ExternalClientSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "For Client in ExternalVPC"
      GroupName: ExternalClientSG
      VpcId: !Ref ExternalVpc
  # Internal
  InternalRdpSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "RDP for InternalVPC"
      GroupName: InternalRdpSG
      VpcId: !Ref InternalVpc
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          SourceSecurityGroupId: !Ref ExternalBastionSG
  InternalSshSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "SSH for InternalVPC"
      GroupName: InternalSshSG
      VpcId: !Ref InternalVpc
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref ExternalBastionSG


Outputs:
  #----------------------------Internal VPC 
  #------------------ VPC
  InternalVpcId:
    Description:  VPC ID
    Value: !Ref InternalVpc
    Export:
      Name: !Sub "${AWS::StackName}-InternalVpcId"
  InternalVpcCidr:
    Description:  VPC CIDR
    Value: !Ref InternalVpcCidr
    Export:
      Name: !Sub "${AWS::StackName}-InternalVpcCidr"
  #------------------ Subnet
  InternalFrontSubnet1Id:
    Description: Front Subnet1 ID in the  VPC
    Value: !Ref InternalFrontSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-InternalFrontSubnet1Id"
  InternalFrontSubnet2Id:
    Description: Front Subnet2 ID in the  VPC
    Value: !Ref InternalFrontSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-InternalFrontSubnet2Id"
  InternalBackSubnet1Id:
    Description: Back Subnet1 ID in the  VPC
    Value: !Ref InternalBackSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-InternalBackSubnet1Id"
  InternalBackSubnet2Id:
    Description: Back Subnet2 ID in the  VPC
    Value: !Ref InternalBackSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-InternalBackSubnet2Id"
  #------------------ route tables
  InternalFrontRouteTableId:
    Description: Route table for Front Subnet
    Value: !Ref InternalFrontRouteTable
    Export:
      Name: !Sub "${AWS::StackName}-InternalFrontRouteTableId"
  InternalBackSubnet1RouteTableId:
    Description: Route table for Back Subnet1
    Value: !Ref InternalBackSubnet1RouteTable
    Export:
      Name: !Sub "${AWS::StackName}-InternalBackSubnet1RouteTableId"
  InternalBackSubnet2RouteTableId:
    Description: Route table for Back Subnet2
    Value: !Ref InternalBackSubnet2RouteTable
    Export:
      Name: !Sub "${AWS::StackName}-InternalBackSubnet2RouteTableId"
  #------------------ Resource DNS name
  InternalVpcInternalDnsName:
    Description: Resource DNS zone name in the  Vpc
    Value: !Ref InternalVpcInternalDnsName
    Export:
      Name: !Sub ${AWS::StackName}-InternalVpcInternalDnsName
  InternalVpcInternalDnsId:
    Description: Resource DNS zone id in the  VPC
    Value: !Ref InternalVpcInternalDns
    Export:
      Name: !Sub ${AWS::StackName}-InternalVpcInternalDnsId
  #----------------------------External VPC 
  #------------------ VPC
  ExternalVpcId:
    Description:  VPC ID
    Value: !Ref ExternalVpc
    Export:
      Name: !Sub "${AWS::StackName}-ExternalVpcId"
  ExternalVpcCidr:
    Description:  VPC CIDR
    Value: !Ref ExternalVpcCidr
    Export:
      Name: !Sub "${AWS::StackName}-ExternalVpcCidr"
  #------------------ Subnet
  ExternalFrontSubnet1Id:
    Description: Front Subnet1 ID in the  VPC
    Value: !Ref ExternalFrontSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-ExternalFrontSubnet1Id"
  ExternalFrontSubnet2Id:
    Description: Front Subnet2 ID in the  VPC
    Value: !Ref ExternalFrontSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-ExternalFrontSubnet2Id"
  #------------------ route tables
  ExternalFrontRouteTableId:
    Description: Route table for Front Subnet
    Value: !Ref ExternalFrontRouteTable
    Export:
      Name: !Sub "${AWS::StackName}-ExternalFrontRouteTableId"
  #------------------ Resource DNS name
  ExternalVpcInternalDnsName:
    Description: Resource DNS zone name in the  Vpc
    Value: !Ref ExternalVpcInternalDnsName
    Export:
      Name: !Sub ${AWS::StackName}-ExternalVpcInternalDnsName
  ExternalVpcExternalDnsId:
    Description: Resource DNS zone id in the  VPC
    Value: !Ref ExternalVpcExternalDns
    Export:
      Name: !Sub ${AWS::StackName}-ExternalVpcExternalDnsId
  ExternalRdpSGId:
    Description: Security Group ID for ExternalRdpSG
    Value: !Ref ExternalRdpSG
    Export:
      Name: !Sub ${AWS::StackName}-ExternalRdpSGId
  ExternalSshSGId:
    Description: Security Group ID for ExternalSshSG
    Value: !Ref ExternalSshSG
    Export:
      Name: !Sub ${AWS::StackName}-ExternalSshSGId
  ExternalBastionSGId:
    Description: Security Group ID for ExternalBastionSG
    Value: !Ref ExternalBastionSG
    Export:
      Name: !Sub ${AWS::StackName}-ExternalBastionSGId
  ExternalClientSGId:
    Description: Security Group ID for ExternalClientSG
    Value: !Ref ExternalClientSG
    Export:
      Name: !Sub ${AWS::StackName}-ExternalClientSGId
  InternalRdpSGId:
    Description: Security Group ID for InternalRdpSG
    Value: !Ref InternalRdpSG
    Export:
      Name: !Sub ${AWS::StackName}-InternalRdpSGId
  InternalSshSGId:
    Description: Security Group ID for InternalSshSG
    Value: !Ref InternalSshSG
    Export:
      Name: !Sub ${AWS::StackName}-InternalSshSGId